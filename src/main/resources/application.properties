spring.application.name=Loan App
spring.profiles.active=dev

# H2 In-Memory Database configuration
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# Datasource configuration
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# Hibernate settings
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# Test properties for JWT configuration

# A valid Base64 encoded secret key. For example, "exampleSecretKey" encoded to Base64:
####### Generated with below #######
#import io.jsonwebtoken.security.Keys;
#import io.jsonwebtoken.SignatureAlgorithm;
#import javax.crypto.SecretKey;
#import java.util.Base64;
#public class KeyGenerator {
#public static void main(String[] args) {
#SecretKey key = Keys.secretKeyFor(SignatureAlgorithm.HS256);
#String base64Key = Base64.getEncoder().encodeToString(key.getEncoded());
#System.out.println("Generated Base64 key: " + base64Key);
#}}
########################################
security.jwt.secret-key=GYgU5tBm2HKcTHUOKhZLMMX7xeS1c3WWsBqS8Z9SAjE=

security.jwt.expiration-time=3600000

loan.minInterest=0.1
loan.maxInterest=0.5



